[
  {
    "codeTitle": "Setting Up Local Development Environment for Repomix",
    "codeDescription": "Commands for cloning the repository, installing dependencies, and running the Repomix CLI locally. Requires Node.js, Git, and npm to be installed on the system.",
    "codeLanguage": "bash",
    "codeTokens": 93,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/development/setup.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix Development Setup Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Clone repository\ngit clone https://github.com/yamadashy/repomix.git\ncd repomix\n\n# Install dependencies\nnpm install\n\n# Run CLI\nnpm run repomix"
      }
    ],
    "relevance": 0.995
  },
  {
    "codeTitle": "Installing Repomix globally with npm",
    "codeDescription": "Installing Repomix globally on your system using npm package manager.",
    "codeLanguage": "bash",
    "codeTokens": 37,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/installation.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix Installation Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install -g repomix"
      }
    ],
    "relevance": 0.99
  },
  {
    "codeTitle": "Using Repomix Low-Level APIs for File Analysis",
    "codeDescription": "Example of using Repomix's core components directly for more control. It demonstrates file searching, collection, processing, and token counting functionality.",
    "codeLanguage": "javascript",
    "codeTokens": 197,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/development/using-repomix-as-a-library.md#2025-04-21_snippet_3",
    "pageTitle": "Integration Guide for Repomix as a Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { searchFiles, collectFiles, processFiles, TokenCounter } from 'repomix';\n\nasync function analyzeFiles(directory) {\n  // Encontrar e coletar arquivos\n  const { filePaths } = await searchFiles(directory, { /* configuração */ });\n  const rawFiles = await collectFiles(filePaths, directory);\n  const processedFiles = await processFiles(rawFiles, { /* configuração */ });\n  \n  // Contar tokens\n  const tokenCounter = new TokenCounter('o200k_base');\n  \n  // Retornar resultados da análise\n  return processedFiles.map(file => ({\n    path: file.path,\n    tokens: tokenCounter.countTokens(file.content)\n  }));\n}"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Basic Usage of Repomix CLI",
    "codeDescription": "The basic command to pack an entire repository using repomix. This is the simplest form of the command with no additional options.",
    "codeLanguage": "bash",
    "codeTokens": 48,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Basic Repomix Command-Line Examples",
    "codeDescription": "Various command-line examples showing how to use Repomix with different options, such as custom output paths, ignoring files, using custom configurations, and processing remote repositories.",
    "codeLanguage": "bash",
    "codeTokens": 112,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_27",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix -o custom-output.txt\nrepomix -i \"*.log,tmp\" -v\nrepomix -c ./custom-config.json\nrepomix --style xml\nrepomix --remote https://github.com/user/repo\nnpx repomix src"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Enabling Code Compression in Repomix",
    "codeDescription": "Commands for enabling code compression, which can be used with both local and remote repositories to reduce the output size.",
    "codeLanguage": "bash",
    "codeTokens": 73,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --compress\n\n# You can also use it with remote repositories:\nrepomix --remote yamadashy/repomix --compress"
      }
    ],
    "relevance": 0.985
  },
  {
    "codeTitle": "Installing and Running Repomix via Package Managers",
    "codeDescription": "Commands for installing Repomix globally using npm, yarn, or Homebrew, and basic usage instructions.",
    "codeLanguage": "bash",
    "codeTokens": 93,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/index.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix Documentation and Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Install using npm\nnpm install -g repomix\n\n# Alternatively using yarn\nyarn global add repomix\n\n# Alternatively using Homebrew (macOS/Linux)\nbrew install repomix\n\n# Then run in any project directory\nrepomix"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Using Repomix CLI via npx",
    "codeDescription": "Instant usage of Repomix without installation using npx in any project directory.",
    "codeLanguage": "bash",
    "codeTokens": 43,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "npx repomix"
      }
    ],
    "relevance": 0.98
  },
  {
    "codeTitle": "Repomix Main Configuration Schema",
    "codeDescription": "Complete configuration schema for Repomix showing all available options including output settings, ignore patterns, and security configurations.",
    "codeLanguage": "json",
    "codeTokens": 247,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/configuration.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"filePath\": \"repomix-output.xml\",\n    \"style\": \"xml\",\n    \"parsableStyle\": true,\n    \"compress\": false,\n    \"headerText\": \"Custom header text\",\n    \"instructionFilePath\": \"repomix-instruction.md\",\n    \"fileSummary\": true,\n    \"directoryStructure\": true,\n    \"removeComments\": false,\n    \"removeEmptyLines\": false,\n    \"topFilesLength\": 5,\n    \"showLineNumbers\": false,\n    \"copyToClipboard\": false,\n    \"includeEmptyDirectories\": false,\n    \"git\": {\n      \"sortByChanges\": true,\n      \"sortByChangesMaxCommits\": 100\n    }\n  },\n  \"include\": [\"**/*\"],\n  \"ignore\": {\n    \"useGitignore\": true,\n    \"useDefaultPatterns\": true,\n    \"customPatterns\": [\"tmp/\", \"*.log\"]\n  },\n  \"security\": {\n    \"enableSecurityCheck\": true\n  }\n}"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Installing Repomix Globally",
    "codeDescription": "Commands for installing Repomix globally using npm, yarn, or Homebrew for repeated use across projects.",
    "codeLanguage": "bash",
    "codeTokens": 96,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "# Install using npm\nnpm install -g repomix\n\n# Alternatively using yarn\nyarn global add repomix\n\n# Alternatively using Homebrew (macOS/Linux)\nbrew install repomix\n\n# Then run in any project directory\nrepomix"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Running Repomix via NPX in bash",
    "codeDescription": "This command runs Repomix in the current project directory, generating an AI-friendly file of the entire repository.",
    "codeLanguage": "bash",
    "codeTokens": 49,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/index.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix: Repository Packing Tool for AI Processing",
    "codeList": [
      {
        "language": "bash",
        "code": "npx repomix"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Example Usage of RepomMix CLI Commands",
    "codeDescription": "Demonstrates various ways to use the RepomMix tool through command line examples, including basic usage, custom output options, compression, filtering specific files, and working with remote repositories.",
    "codeLanguage": "bash",
    "codeTokens": 187,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/command-line-options.md#2025-04-21_snippet_0",
    "pageTitle": "Command Line Options for RepomMix Tool",
    "codeList": [
      {
        "language": "bash",
        "code": "# Basic usage\nrepomix\n\n# Custom output\nrepomix -o output.xml --style xml\n\n# Custom output with compression\nrepomix --compress\n\n# Process specific files\nrepomix --include \"src/**/*.ts\" --ignore \"**/*.test.ts\"\n\n# Remote repository with branch\nrepomix --remote https://github.com/user/repo/tree/main\n\n# Remote repository with commit\nrepomix --remote https://github.com/user/repo/commit/836abcd7335137228ad77feb28655d85712680f1\n\n# Remote repository with shorthand\nrepomix --remote user/repo"
      }
    ],
    "relevance": 0.975
  },
  {
    "codeTitle": "Installing Repomix using npx",
    "codeDescription": "Running Repomix without requiring installation by using npx, which is included with npm.",
    "codeLanguage": "bash",
    "codeTokens": 40,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/installation.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix Installation Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "npx repomix"
      }
    ],
    "relevance": 0.972
  },
  {
    "codeTitle": "Processing Remote Git Repositories with Repomix",
    "codeDescription": "Examples of how to process remote Git repositories with Repomix without manual cloning, including specifying branches, tags, or commit hashes.",
    "codeLanguage": "bash",
    "codeTokens": 66,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_23",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --remote https://github.com/yamadashy/repomix"
      },
      {
        "language": "bash",
        "code": "repomix --remote yamadashy/repomix"
      },
      {
        "language": "bash",
        "code": "# Using --remote-branch option\nrepomix --remote https://github.com/yamadashy/repomix --remote-branch main\n\n# Using branch's URL\nrepomix --remote https://github.com/yamadashy/repomix/tree/main"
      },
      {
        "language": "bash",
        "code": "# Using --remote-branch option\nrepomix --remote https://github.com/yamadashy/repomix --remote-branch 935b695\n\n# Using commit's URL\nrepomix --remote https://github.com/yamadashy/repomix/commit/836abcd7335137228ad77feb28655d85712680f1"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Packing Remote Repositories with Repomix",
    "codeDescription": "Commands demonstrating how to pack remote GitHub repositories with various options for branch, tag, or commit specification.",
    "codeLanguage": "bash",
    "codeTokens": 235,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_6",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --remote https://github.com/yamadashy/repomix\n\n# You can also use GitHub shorthand:\nrepomix --remote yamadashy/repomix\n\n# You can specify the branch name, tag, or commit hash:\nrepomix --remote https://github.com/yamadashy/repomix --remote-branch main\n\n# Or use a specific commit hash:\nrepomix --remote https://github.com/yamadashy/repomix --remote-branch 935b695\n\n# Another convenient way is specifying the branch's URL\nrepomix --remote https://github.com/yamadashy/repomix/tree/main\n\n# Commit's URL is also supported\nrepomix --remote https://github.com/yamadashy/repomix/commit/836abcd7335137228ad77feb28655d85712680f1"
      }
    ],
    "relevance": 0.97
  },
  {
    "codeTitle": "Project Structure Overview for Repomix",
    "codeDescription": "A representation of the Repomix project directory structure, showing the main components including CLI implementation, configuration handling, core functionality, and shared utilities.",
    "codeLanguage": "bash",
    "codeTokens": 88,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/development/setup.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix Development Setup Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "src/\n├── cli/          # CLI implementation\n├── config/       # Configuration handling\n├── core/         # Core functionality\n└── shared/       # Shared utilities"
      }
    ],
    "relevance": 0.968
  },
  {
    "codeTitle": "Code Quality Assessment Prompt",
    "codeDescription": "A prompt template for assessing code quality and suggesting improvements, focusing on naming conventions, organization, error handling, and commenting practices.",
    "codeLanguage": "markdown",
    "codeTokens": 82,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/prompt-examples.md#2025-04-21_snippet_8",
    "pageTitle": "Prompt Examples for Code Analysis",
    "codeList": [
      {
        "language": "markdown",
        "code": "Assess code quality and suggest improvements:\n1. Review naming conventions\n2. Check code organization\n3. Evaluate error handling\n4. Review commenting practices\n\nProvide specific examples of good and problematic patterns."
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Running Repomix as an MCP Server",
    "codeDescription": "Command to run Repomix as a Model Context Protocol (MCP) server, enabling AI assistants to directly interact with your codebase.",
    "codeLanguage": "bash",
    "codeTokens": 56,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_26",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --mcp"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Using Repomix runCli Function for Basic Processing",
    "codeDescription": "Example of using the runCli function to process the current directory with custom options. The function returns processing results including file counts, character counts, and token counts.",
    "codeLanguage": "javascript",
    "codeTokens": 145,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/development/using-repomix-as-a-library.md#2025-04-21_snippet_1",
    "pageTitle": "Integration Guide for Repomix as a Library",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { runCli, type CliOptions } from 'repomix';\n\n// Processar o diretório atual com opções personalizadas\nasync function packProject() {\n  const options = {\n    output: 'output.xml',\n    style: 'xml',\n    compress: true,\n    quiet: true\n  } as CliOptions;\n  \n  const result = await runCli(['.'], process.cwd(), options);\n  return result.packResult;\n}"
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Including Specific Files with Glob Patterns in Repomix",
    "codeDescription": "Command to include only files matching specific glob patterns. This example includes all TypeScript files in the src directory and all Markdown files anywhere in the repository.",
    "codeLanguage": "bash",
    "codeTokens": 61,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --include \"src/**/*.ts,**/*.md\""
      }
    ],
    "relevance": 0.965
  },
  {
    "codeTitle": "Running Repomix as MCP Server in Bash",
    "codeDescription": "Command to start Repomix in MCP server mode, making it available for AI assistants that support the Model Context Protocol.",
    "codeLanguage": "bash",
    "codeTokens": 48,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/mcp-server.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix MCP Server Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --mcp"
      }
    ],
    "relevance": 0.963
  },
  {
    "codeTitle": "Using File System Tools in TypeScript",
    "codeDescription": "Example TypeScript code demonstrating how to use the file_system_read_file and file_system_read_directory tools to safely interact with the local file system.",
    "codeLanguage": "typescript",
    "codeTokens": 107,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/mcp-server.md#2025-04-21_snippet_6",
    "pageTitle": "Repomix MCP Server Setup and Usage Guide",
    "codeList": [
      {
        "language": "typescript",
        "code": "// Ler um arquivo\nconst fileContent = await tools.file_system_read_file({\n  path: '/absolute/path/to/file.txt'\n});\n\n// Listar conteúdo do diretório\nconst dirContent = await tools.file_system_read_directory({\n  path: '/absolute/path/to/directory'\n});"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Accessing Repomix Core Components Directly",
    "codeDescription": "Demonstrates using Repomix's low-level APIs directly for more granular control. This example shows how to search for files, collect and process them, and perform token counting with custom configuration options.",
    "codeLanguage": "javascript",
    "codeTokens": 197,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/development/using-repomix-as-a-library.md#2025-04-21_snippet_3",
    "pageTitle": "Using Repomix as a Library for Node.js Projects",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { searchFiles, collectFiles, processFiles, TokenCounter } from 'repomix';\n\nasync function analyzeFiles(directory) {\n  // Find and collect files\n  const { filePaths } = await searchFiles(directory, { /* config */ });\n  const rawFiles = await collectFiles(filePaths, directory);\n  const processedFiles = await processFiles(rawFiles, { /* config */ });\n  \n  // Count tokens\n  const tokenCounter = new TokenCounter('o200k_base');\n  \n  // Return analysis results\n  return processedFiles.map(file => ({\n    path: file.path,\n    tokens: tokenCounter.countTokens(file.content)\n  }));\n}"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Processing Remote GitHub Repositories with Repomix",
    "codeDescription": "Shows how to clone and process a remote GitHub repository using Repomix's CLI wrapper functionality. The function accepts a repository URL and returns the processing results.",
    "codeLanguage": "javascript",
    "codeTokens": 130,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/development/using-repomix-as-a-library.md#2025-04-21_snippet_2",
    "pageTitle": "Using Repomix as a Library for Node.js Projects",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { runCli, type CliOptions } from 'repomix';\n\n// Clone and process a GitHub repo\nasync function processRemoteRepo(repoUrl) {\n  const options = {\n    remote: repoUrl,\n    output: 'output.xml',\n    compress: true\n  } as CliOptions;\n  \n  return await runCli(['.'], process.cwd(), options);\n}"
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Excluding Files from Repomix Processing",
    "codeDescription": "Command to exclude specific files or directories from processing. This example excludes all log files and the tmp directory.",
    "codeLanguage": "bash",
    "codeTokens": 50,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --ignore \"**/*.log,tmp/\""
      }
    ],
    "relevance": 0.96
  },
  {
    "codeTitle": "Generating Comprehensive Output with Markdown Instruction",
    "codeDescription": "This markdown snippet contains an instruction template for generating comprehensive output from code repositories without abbreviation. It's designed to be included in a repomix-instruction.md file.",
    "codeLanguage": "markdown",
    "codeTokens": 83,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_35",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "markdown",
        "code": "# Generate Comprehensive Output\n\n- Include all content without abbreviation, unless specified otherwise\n- Optimize for handling large codebases while maintaining output quality"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Running Repomix on a Specific Directory",
    "codeDescription": "Command to run Repomix on a specific directory path instead of the current directory.",
    "codeLanguage": "bash",
    "codeTokens": 46,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix path/to/directory"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Initializing Repomix Configuration File",
    "codeDescription": "Command to create a new Repomix configuration file (repomix.config.json) for customized settings.",
    "codeLanguage": "bash",
    "codeTokens": 48,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_8",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --init"
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "Including Specific Files with Glob Patterns",
    "codeDescription": "Command to include only specific files or directories in the Repomix output using glob patterns.",
    "codeLanguage": "bash",
    "codeTokens": 53,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_4",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --include \"src/**/*.ts,**/*.md\""
      }
    ],
    "relevance": 0.955
  },
  {
    "codeTitle": "TypeScript Code Compression Example with Repomix",
    "codeDescription": "An example showing how TypeScript code is compressed by Repomix, where implementation details are replaced with '⋮----' while preserving function signatures, imports, and interfaces.",
    "codeLanguage": "typescript",
    "codeTokens": 149,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_25",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "typescript",
        "code": "import { ShoppingItem } from './shopping-item';\n\n/**\n * Calculate the total price of shopping items\n */\nconst calculateTotal = (\n  items: ShoppingItem[]\n) => {\n  let total = 0;\n  for (const item of items) {\n    total += item.price * item.quantity;\n  }\n  return total;\n}\n\n// Shopping item interface\ninterface Item {\n  name: string;\n  price: number;\n  quantity: number;\n}"
      },
      {
        "language": "typescript",
        "code": "import { ShoppingItem } from './shopping-item';\n⋮----\n/**\n * Calculate the total price of shopping items\n */\nconst calculateTotal = (\n  items: ShoppingItem[]\n) => {\n⋮----\n// Shopping item interface\ninterface Item {\n  name: string;\n  price: number;\n  quantity: number;\n}"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Example Repomix Configuration in JSON5",
    "codeDescription": "A comprehensive example of the repomix.config.json file showing all available configuration options with their values. The file supports JSON5 syntax which allows comments, trailing commas, unquoted property names, and relaxed string syntax.",
    "codeLanguage": "json5",
    "codeTokens": 307,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_32",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "json5",
        "code": "{\n  \"output\": {\n    \"filePath\": \"repomix-output.xml\",\n    \"style\": \"xml\",\n    \"parsableStyle\": true,\n    \"compress\": false,\n    \"headerText\": \"Custom header information for the packed file.\",\n    \"fileSummary\": true,\n    \"directoryStructure\": true,\n    \"removeComments\": false,\n    \"removeEmptyLines\": false,\n    \"showLineNumbers\": false,\n    \"copyToClipboard\": true,\n    \"topFilesLength\": 5,\n    \"includeEmptyDirectories\": false,\n    \"git\": {\n      \"sortByChanges\": true,\n      \"sortByChangesMaxCommits\": 100\n    }\n  },\n  \"include\": [\n    \"**/*\"\n  ],\n  \"ignore\": {\n    \"useGitignore\": true,\n    \"useDefaultPatterns\": true,\n    // Patterns can also be specified in .repomixignore\n    \"customPatterns\": [\n      \"additional-folder\",\n      \"**/*.log\"\n    ],\n  },\n  \"security\": {\n    \"enableSecurityCheck\": true\n  },\n  \"tokenCount\": {\n    \"encoding\": \"o200k_base\"\n  },\n}"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Creating Global Repomix Configuration",
    "codeDescription": "Command to initialize a global configuration file that applies to all Repomix projects on the system.",
    "codeLanguage": "bash",
    "codeTokens": 43,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/configuration.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --init --global"
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Excluding Files from Repomix Output",
    "codeDescription": "Command to exclude specific files or directories from the Repomix output.",
    "codeLanguage": "bash",
    "codeTokens": 46,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --ignore \"**/*.log,tmp/\""
      }
    ],
    "relevance": 0.95
  },
  {
    "codeTitle": "Processing Repositories with Repomix Using URL or GitHub Shorthand",
    "codeDescription": "Demonstrates how to process public repositories using Repomix with either a full URL or GitHub's shorthand notation (username/repository).",
    "codeLanguage": "bash",
    "codeTokens": 75,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/remote-repository-processing.md#2025-04-21_snippet_0",
    "pageTitle": "Remote Repository Processing with Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "# Using full URL\nrepomix --remote https://github.com/user/repo\n\n# Using GitHub shorthand\nrepomix --remote user/repo"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Sample Repomix Configuration in JSON Format",
    "codeDescription": "Complete example of a repomix.config.json file showing all available configuration options including output settings, inclusion/exclusion patterns, and security settings.",
    "codeLanguage": "json",
    "codeTokens": 258,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/configuration.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"filePath\": \"repomix-output.xml\",\n    \"style\": \"xml\",\n    \"parsableStyle\": true,\n    \"compress\": false,\n    \"headerText\": \"Texto personalizado do cabeçalho\",\n    \"instructionFilePath\": \"repomix-instruction.md\",\n    \"fileSummary\": true,\n    \"directoryStructure\": true,\n    \"removeComments\": false,\n    \"removeEmptyLines\": false,\n    \"topFilesLength\": 5,\n    \"showLineNumbers\": false,\n    \"copyToClipboard\": false,\n    \"includeEmptyDirectories\": false,\n    \"git\": {\n      \"sortByChanges\": true,\n      \"sortByChangesMaxCommits\": 100\n    }\n  },\n  \"include\": [\"**/*\"],\n  \"ignore\": {\n    \"useGitignore\": true,\n    \"useDefaultPatterns\": true,\n    \"customPatterns\": [\"tmp/\", \"*.log\"]\n  },\n  \"security\": {\n    \"enableSecurityCheck\": true\n  }\n}"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Repomix Git Integration Configuration",
    "codeDescription": "Example configuration for Git integration features including file sorting based on change history.",
    "codeLanguage": "json",
    "codeTokens": 65,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/configuration.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"git\": {\n      \"sortByChanges\": true,\n      \"sortByChangesMaxCommits\": 100\n    }\n  }\n}"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Removing Comments from Output in Repomix",
    "codeDescription": "Command to strip comments from the code in the output, producing cleaner and more concise results.",
    "codeLanguage": "bash",
    "codeTokens": 43,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_9",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --remove-comments"
      }
    ],
    "relevance": 0.945
  },
  {
    "codeTitle": "Working with Remote Repositories in Repomix",
    "codeDescription": "Commands for processing remote repositories. Examples show using full GitHub URLs, shorthand notation, and specifying branches, tags, or commits.",
    "codeLanguage": "bash",
    "codeTokens": 112,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_4",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Using GitHub URL\nrepomix --remote https://github.com/user/repo\n\n# Using shorthand\nrepomix --remote user/repo\n\n# Specific branch/tag/commit\nrepomix --remote user/repo --remote-branch main\nrepomix --remote user/repo --remote-branch 935b695"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Sample prompt for AI with Repomix output",
    "codeDescription": "This example shows how to introduce a Repomix output file to an AI assistant with a prompt requesting code review and refactoring.",
    "codeLanguage": "plaintext",
    "codeTokens": 74,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/index.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix: Repository Packing Tool for AI Processing",
    "codeList": [
      {
        "language": "plaintext",
        "code": "This file contains all the files in the repository combined into one.\nI want to refactor the code, so please review it first."
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Configuring Repomix MCP in Cline Extension",
    "codeDescription": "JSON configuration for adding Repomix as an MCP server in the Cline VS Code extension. This should be added to the cline_mcp_settings.json file.",
    "codeLanguage": "json",
    "codeTokens": 105,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_30",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"mcpServers\": {\n    \"repomix\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"repomix\",\n        \"--mcp\"\n      ]\n    }\n  }\n}"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Compressing Output with Repomix",
    "codeDescription": "Commands for using the code compression feature to reduce token count while preserving structure.",
    "codeLanguage": "bash",
    "codeTokens": 69,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_7",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --compress\n\n# You can also use it with remote repositories:\nrepomix --remote yamadashy/repomix --compress"
      }
    ],
    "relevance": 0.94
  },
  {
    "codeTitle": "Example Custom Instruction File Content",
    "codeDescription": "Sample markdown content for a custom instruction file. This example provides guidelines for analyzing the repository code, highlighting important directories and files to focus on or ignore.",
    "codeLanguage": "markdown",
    "codeTokens": 142,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/custom-instructions.md#2025-04-21_snippet_1",
    "pageTitle": "Custom Instructions for Repomix",
    "codeList": [
      {
        "language": "markdown",
        "code": "# Instruções do Repositório\n\nEste repositório contém o código-fonte da ferramenta Repomix. Por favor, siga estas diretrizes ao analisar o código:\n\n1. Concentre-se na funcionalidade principal no diretório `src/core`.\n2. Preste atenção especial às verificações de segurança em `src/core/security`.\n3. Ignore quaisquer arquivos no diretório `tests`."
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Example AI Prompt for Repomix Output",
    "codeDescription": "Sample prompt to use when sending a Repomix-generated file to an AI assistant for code review.",
    "codeLanguage": "bash",
    "codeTokens": 68,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "This file contains all the files in the repository combined into one.\nI want to refactor the code, so please review it first."
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Configuring Cline MCP Settings",
    "codeDescription": "JSON configuration for setting up Repomix as an MCP server in the Cline VS Code extension by editing the cline_mcp_settings.json file.",
    "codeLanguage": "json",
    "codeTokens": 101,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/mcp-server.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix MCP Server Setup and Usage Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"mcpServers\": {\n    \"repomix\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"repomix\",\n        \"--mcp\"\n      ]\n    }\n  }\n}"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Configuring Code Compression in JSON",
    "codeDescription": "JSON configuration option to enable code compression in the configuration file.",
    "codeLanguage": "json",
    "codeTokens": 45,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/code-compress.md#2025-04-21_snippet_4",
    "pageTitle": "Code Compression for Repomix",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"compress\": true\n  }\n}"
      }
    ],
    "relevance": 0.935
  },
  {
    "codeTitle": "Example Usage of read_repomix_output MCP Tool",
    "codeDescription": "Example JSON parameters for the read_repomix_output tool, which reads content from a previously generated Repomix output file using its ID.",
    "codeLanguage": "json",
    "codeTokens": 72,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/mcp-server.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix MCP Server Setup and Usage Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"outputId\": \"8f7d3b1e2a9c6054\"\n}"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Using Repomix CLI Wrapper with Custom Options",
    "codeDescription": "Demonstrates how to use the runCli function to process the current directory with custom options like output format, style, and compression settings. Returns processing results including file counts and token statistics.",
    "codeLanguage": "javascript",
    "codeTokens": 146,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/development/using-repomix-as-a-library.md#2025-04-21_snippet_1",
    "pageTitle": "Using Repomix as a Library for Node.js Projects",
    "codeList": [
      {
        "language": "javascript",
        "code": "import { runCli, type CliOptions } from 'repomix';\n\n// Process current directory with custom options\nasync function packProject() {\n  const options = {\n    output: 'output.xml',\n    style: 'xml',\n    compress: true,\n    quiet: true\n  } as CliOptions;\n  \n  const result = await runCli(['.'], process.cwd(), options);\n  return result.packResult;\n}"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Example Parameters for pack_remote_repository MCP Tool",
    "codeDescription": "JSON parameters example for the pack_remote_repository tool, which fetches, clones, and packages a GitHub repository for AI analysis.",
    "codeLanguage": "json",
    "codeTokens": 89,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/mcp-server.md#2025-04-21_snippet_4",
    "pageTitle": "Repomix MCP Server Documentation",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"remote\": \"yamadashy/repomix\",\n  \"compress\": true,\n  \"includePatterns\": \"src/**/*.ts,**/*.md\",\n  \"ignorePatterns\": \"**/*.log,tmp/\"\n}"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Initializing Repomix Configuration",
    "codeDescription": "Command to create a new Repomix configuration file in the current directory.",
    "codeLanguage": "bash",
    "codeTokens": 37,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/configuration.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --init"
      }
    ],
    "relevance": 0.93
  },
  {
    "codeTitle": "Packing Specific Directories with Repomix",
    "codeDescription": "Command to pack only a specific directory within your repository. This allows selective packaging of content rather than the entire repository.",
    "codeLanguage": "bash",
    "codeTokens": 49,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix path/to/directory"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Customizing Output Options in Repomix",
    "codeDescription": "Demonstrates how to control Repomix's output by specifying custom output locations, changing the output format to XML, or removing comments from the processed files.",
    "codeLanguage": "bash",
    "codeTokens": 101,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/remote-repository-processing.md#2025-04-21_snippet_2",
    "pageTitle": "Remote Repository Processing with Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "# Custom output location\nrepomix --remote user/repo -o custom-output.xml\n\n# With XML format\nrepomix --remote user/repo --style xml\n\n# Remove comments\nrepomix --remote user/repo --remove-comments"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Example Usage of pack_codebase MCP Tool",
    "codeDescription": "Example JSON parameters for the pack_codebase tool, which packages a local code directory for AI analysis with options for compression and file pattern filtering.",
    "codeLanguage": "json",
    "codeTokens": 91,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/mcp-server.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix MCP Server Setup and Usage Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"directory\": \"/path/to/your/project\",\n  \"compress\": true,\n  \"includePatterns\": \"src/**/*.ts,**/*.md\",\n  \"ignorePatterns\": \"**/*.log,tmp/\"\n}"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "Repomix Configuration File Example",
    "codeDescription": "Example configuration file (repomix.config.json) showing various customization options.",
    "codeLanguage": "json",
    "codeTokens": 104,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/index.md#2025-04-21_snippet_6",
    "pageTitle": "Repomix Documentation and Usage Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"style\": \"markdown\",\n    \"filePath\": \"custom-output.md\",\n    \"removeComments\": true,\n    \"showLineNumbers\": true,\n    \"topFilesLength\": 10\n  },\n  \"ignore\": {\n    \"customPatterns\": [\"*.test.ts\", \"docs/**\"]\n  }\n}"
      }
    ],
    "relevance": 0.925
  },
  {
    "codeTitle": "AI Prompt for Library Overview",
    "codeDescription": "Example prompt for AI tools to provide a high-level understanding of a library's purpose and architecture.",
    "codeLanguage": "bash",
    "codeTokens": 72,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_16",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "This file contains the entire codebase of library. Please provide a comprehensive overview of the library, including its main purpose, key features, and overall architecture."
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Configuring Repomix MCP Server in LLM Client Settings",
    "codeDescription": "JSON configuration block to add to your LLM client's settings file (such as Cline, Roo Code, Claude Desktop, or Cursor) to enable the Repomix MCP server. It uses npx to run Repomix without requiring a global installation.",
    "codeLanguage": "json",
    "codeTokens": 134,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/llms-install.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix MCP Server Installation Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"mcpServers\": {\n    \"repomix\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"repomix\",\n        \"--mcp\"\n      ],\n      \"disabled\": false,\n      \"autoApprove\": []\n    }\n  }\n}"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Example Parameters for pack_codebase MCP Tool",
    "codeDescription": "JSON parameters example for the pack_codebase tool, which packages a local code directory into a consolidated file for AI analysis.",
    "codeLanguage": "json",
    "codeTokens": 84,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/mcp-server.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix MCP Server Documentation",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"directory\": \"/path/to/your/project\",\n  \"compress\": true,\n  \"includePatterns\": \"src/**/*.ts,**/*.md\",\n  \"ignorePatterns\": \"**/*.log,tmp/\"\n}"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Initializing Repomix Configuration File",
    "codeDescription": "Command to create a configuration file for repomix, allowing for persistent settings across multiple runs without specifying command-line options each time.",
    "codeLanguage": "bash",
    "codeTokens": 50,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_13",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --init"
      }
    ],
    "relevance": 0.92
  },
  {
    "codeTitle": "Repomix Remote Repository Commands",
    "codeDescription": "Commands for packing remote repositories using different URL formats and commit references.",
    "codeLanguage": "bash",
    "codeTokens": 155,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/index.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix Documentation and Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Using shorthand format\nnpx repomix --remote yamadashy/repomix\n\n# Using full URL (supports branches and specific paths)\nnpx repomix --remote https://github.com/yamadashy/repomix\nnpx repomix --remote https://github.com/yamadashy/repomix/tree/main\n\n# Using commit's URL\nnpx repomix --remote https://github.com/yamadashy/repomix/commit/836abcd7335137228ad77feb28655d85712680f1"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Running Repomix with Docker on Specific Directory",
    "codeDescription": "Docker command to run Repomix on a specific directory path using volume mounting.",
    "codeLanguage": "bash",
    "codeTokens": 65,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_10",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "docker run -v .:/app -it --rm ghcr.io/yamadashy/repomix path/to/directory"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Example Parameters for read_repomix_output MCP Tool",
    "codeDescription": "JSON parameters example for the read_repomix_output tool, which reads the contents of a Repomix output file by ID when direct file access is not possible.",
    "codeLanguage": "json",
    "codeTokens": 74,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/mcp-server.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix MCP Server Documentation",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"outputId\": \"8f7d3b1e2a9c6054\"\n}"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Configuring Custom Instructions Path in JSON",
    "codeDescription": "JSON configuration to specify the path to the custom instructions markdown file in repomix.config.json.",
    "codeLanguage": "json",
    "codeTokens": 60,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/custom-instructions.md#2025-04-21_snippet_0",
    "pageTitle": "Custom Instructions Configuration for Repomix",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"instructionFilePath\": \"repomix-instruction.md\"\n  }\n}"
      }
    ],
    "relevance": 0.915
  },
  {
    "codeTitle": "Git Integration Configuration Example",
    "codeDescription": "JSON configuration example showing how to setup Git integration to sort files based on their change history.",
    "codeLanguage": "json",
    "codeTokens": 69,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/configuration.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"git\": {\n      \"sortByChanges\": true,\n      \"sortByChangesMaxCommits\": 100\n    }\n  }\n}"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Running Repomix with Docker for remote repository",
    "codeDescription": "Using Docker to run Repomix on a remote repository without installation.",
    "codeLanguage": "bash",
    "codeTokens": 66,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/installation.md#2025-04-21_snippet_6",
    "pageTitle": "Repomix Installation Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "docker run -v ./output:/app -it --rm ghcr.io/yamadashy/repomix --remote yamadashy/repomix"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Installing Repomix MCP Server in VS Code via Command Line",
    "codeDescription": "Command to add Repomix as an MCP server in VS Code. This configures VS Code to use npx to run Repomix in MCP mode.",
    "codeLanguage": "bash",
    "codeTokens": 85,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_28",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "code --add-mcp '{\"name\":\"repomix\",\"command\":\"npx\",\"args\":[\"-y\",\"repomix\",\"--mcp\"]}'"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "Configuring instructionFilePath in repomix.config.json",
    "codeDescription": "JSON5 configuration snippet that demonstrates how to add the instructionFilePath option to the repomix.config.json file. This option specifies the path to a custom instruction file that will be included in the output.",
    "codeLanguage": "json5",
    "codeTokens": 90,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_36",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "json5",
        "code": "{\n  \"output\": {\n    \"instructionFilePath\": \"repomix-instruction.md\",\n    // other options...\n  }\n}"
      }
    ],
    "relevance": 0.91
  },
  {
    "codeTitle": "XML Output Structure Example",
    "codeDescription": "Example of XML output format showing file summary, directory structure, and file contents organization.",
    "codeLanguage": "xml",
    "codeTokens": 102,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/output.md#2025-04-21_snippet_1",
    "pageTitle": "Output Format Configuration Documentation",
    "codeList": [
      {
        "language": "xml",
        "code": "This file is a merged representation of the entire codebase...\n\n<file_summary>\n(Metadata and AI instructions)\n</file_summary>\n\n<directory_structure>\nsrc/\n  index.ts\n  utils/\n    helper.ts\n</directory_structure>\n\n<files>\n<file path=\"src/index.ts\">\n// File contents here\n</file>\n</files>"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Selecting Specific Branches, Tags, or Commits with Repomix",
    "codeDescription": "Shows how to process specific branches, tags, or commit hashes when using Repomix to analyze remote repositories.",
    "codeLanguage": "bash",
    "codeTokens": 101,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/remote-repository-processing.md#2025-04-21_snippet_1",
    "pageTitle": "Remote Repository Processing with Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "# Specific branch\nrepomix --remote user/repo --remote-branch main\n\n# Tag\nrepomix --remote user/repo --remote-branch v1.0.0\n\n# Commit hash\nrepomix --remote user/repo --remote-branch 935b695"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Running Repomix in Docker Container",
    "codeDescription": "Provides examples of using Repomix within a Docker container, including volume mounting to output results to the host filesystem.",
    "codeLanguage": "bash",
    "codeTokens": 118,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/remote-repository-processing.md#2025-04-21_snippet_3",
    "pageTitle": "Remote Repository Processing with Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "# Process and output to current directory\ndocker run -v .:/app -it --rm ghcr.io/yamadashy/repomix \\\n  --remote user/repo\n\n# Output to specific directory\ndocker run -v ./output:/app -it --rm ghcr.io/yamadashy/repomix \\\n  --remote user/repo"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Configuring Custom Instructions in Repomix Configuration File",
    "codeDescription": "JSON configuration that specifies the path to a custom instruction file in the repomix.config.json file. This tells Repomix where to find the instruction file that should be included in the output.",
    "codeLanguage": "json",
    "codeTokens": 79,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/custom-instructions.md#2025-04-21_snippet_0",
    "pageTitle": "Custom Instructions for Repomix",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"instructionFilePath\": \"repomix-instruction.md\"\n  }\n}"
      }
    ],
    "relevance": 0.905
  },
  {
    "codeTitle": "Running Repomix as MCP Server in Bash",
    "codeDescription": "Command to start Repomix in MCP server mode, making it available for AI assistants that support the Model Context Protocol.",
    "codeLanguage": "bash",
    "codeTokens": 51,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/mcp-server.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix MCP Server Setup and Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --mcp"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Configuring VS Code MCP Server via Command Line",
    "codeDescription": "Commands to add Repomix as an MCP server in VS Code and VS Code Insiders through the command line interface.",
    "codeLanguage": "bash",
    "codeTokens": 76,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/mcp-server.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix MCP Server Setup and Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "code --add-mcp '{\"name\":\"repomix\",\"command\":\"npx\",\"args\":[\"-y\",\"repomix\",\"--mcp\"]}'"
      },
      {
        "language": "bash",
        "code": "code-insiders --add-mcp '{\"name\":\"repomix\",\"command\":\"npx\",\"args\":[\"-y\",\"repomix\",\"--mcp\"]}'"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Processing Remote Repository with Docker",
    "codeDescription": "Docker command to process a remote repository and output the result to a specific directory.",
    "codeLanguage": "bash",
    "codeTokens": 77,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_11",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "docker run -v ./output:/app -it --rm ghcr.io/yamadashy/repomix --remote https://github.com/yamadashy/repomix"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Running Repomix with Docker",
    "codeDescription": "Docker commands to run Repomix in an isolated container environment with volume mounting for local directories.",
    "codeLanguage": "bash",
    "codeTokens": 64,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_9",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "docker run -v .:/app -it --rm ghcr.io/yamadashy/repomix"
      }
    ],
    "relevance": 0.9
  },
  {
    "codeTitle": "Creating Utility Functions for Greeting in JavaScript",
    "codeDescription": "Utility module that exports a greet function which accepts a name parameter and returns a formatted greeting string using template literals.",
    "codeLanguage": "JavaScript",
    "codeTokens": 62,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/tests/integration-tests/fixtures/packager/outputs/simple-project-output.txt#2025-04-21_snippet_1",
    "pageTitle": "Simple Project Repository Structure",
    "codeList": [
      {
        "language": "JavaScript",
        "code": "function greet(name) {\n  return `Hello, ${name}!`;\n}\n\nmodule.exports = {\n  greet,\n};"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Configuring MCP Server in VS Code via Command Line",
    "codeDescription": "Commands to add Repomix as an MCP server in VS Code or VS Code Insiders through the command line interface.",
    "codeLanguage": "bash",
    "codeTokens": 73,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/mcp-server.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix MCP Server Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "code --add-mcp '{\"name\":\"repomix\",\"command\":\"npx\",\"args\":[\"-y\",\"repomix\",\"--mcp\"]}'"
      },
      {
        "language": "bash",
        "code": "code-insiders --add-mcp '{\"name\":\"repomix\",\"command\":\"npx\",\"args\":[\"-y\",\"repomix\",\"--mcp\"]}'"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Running Repomix with Docker in specific directory",
    "codeDescription": "Using Docker to run Repomix in a specific directory without installation.",
    "codeLanguage": "bash",
    "codeTokens": 58,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/installation.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix Installation Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "docker run -v .:/app -it --rm ghcr.io/yamadashy/repomix path/to/directory"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Docker-based Development for Repomix",
    "codeDescription": "Commands for building a Docker image and running Repomix in a Docker container. This approach isolates the development environment and ensures consistency across different systems.",
    "codeLanguage": "bash",
    "codeTokens": 79,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/development/setup.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix Development Setup Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Build image\ndocker build -t repomix .\n\n# Run container\ndocker run -v ./:/app -it --rm repomix"
      }
    ],
    "relevance": 0.895
  },
  {
    "codeTitle": "Repomix Ignore Patterns Example",
    "codeDescription": "Example .repomixignore file showing common patterns for excluding files and directories from processing.",
    "codeLanguage": "text",
    "codeTokens": 56,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/configuration.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "text",
        "code": "# Cache directories\n.cache/\ntmp/\n\n# Build outputs\ndist/\nbuild/\n\n# Logs\n*.log"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Configuring MCP Server in Cline via JSON",
    "codeDescription": "JSON configuration for adding Repomix as an MCP server in the Cline VS Code extension by editing the cline_mcp_settings.json file.",
    "codeLanguage": "json",
    "codeTokens": 97,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/mcp-server.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix MCP Server Documentation",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"mcpServers\": {\n    \"repomix\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"repomix\",\n        \"--mcp\"\n      ]\n    }\n  }\n}"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Docker Commands for Repomix",
    "codeDescription": "Docker commands for running Repomix in a containerized environment with various options.",
    "codeLanguage": "bash",
    "codeTokens": 126,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/index.md#2025-04-21_snippet_4",
    "pageTitle": "Repomix Documentation and Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "docker run -v .:/app -it --rm ghcr.io/yamadashy/repomix\ndocker run -v .:/app -it --rm ghcr.io/yamadashy/repomix path/to/directory\ndocker run -v ./output:/app -it --rm ghcr.io/yamadashy/repomix --remote https://github.com/yamadashy/repomix"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Configuring Comment Removal in Repomix",
    "codeDescription": "JSON configuration to enable the comment removal feature in Repomix through the repomix.config.json file. Setting 'removeComments' to true will activate this functionality.",
    "codeLanguage": "json",
    "codeTokens": 67,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/comment-removal.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix Comment Removal Feature",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"removeComments\": true\n  }\n}"
      }
    ],
    "relevance": 0.89
  },
  {
    "codeTitle": "Plain Text Output Structure Example",
    "codeDescription": "Example of plain text output format showing file summary, directory structure, and file contents organization.",
    "codeLanguage": "text",
    "codeTokens": 99,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/output.md#2025-04-21_snippet_6",
    "pageTitle": "Output Format Configuration Documentation",
    "codeList": [
      {
        "language": "text",
        "code": "This file is a merged representation of the entire codebase...\n\n================\nFile Summary\n================\n(Metadata and AI instructions)\n\n================\nDirectory Structure\n================\nsrc/\n  index.ts\n  utils/\n    helper.ts\n\n================\nFiles\n================\n\n================\nFile: src/index.ts\n================\n// File contents here"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Configuring Repomix with JSON Configuration",
    "codeDescription": "Configuration file for Repomix tool that specifies output settings including file path, header text, and various formatting options, as well as file ignore patterns for the repository.",
    "codeLanguage": "JSON",
    "codeTokens": 142,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/tests/integration-tests/fixtures/packager/outputs/simple-project-output.txt#2025-04-21_snippet_3",
    "pageTitle": "Simple Project Repository Structure",
    "codeList": [
      {
        "language": "JSON",
        "code": "{\n  \"output\": {\n    \"filePath\": \"repomix-output.txt\",\n    \"headerText\": \"This repository is simple-project\",\n    \"removeComments\": false,\n    \"removeEmptyLines\": false,\n    \"topFilesLength\": 5,\n    \"showLineNumbers\": false\n  },\n  \"ignore\": {\n    \"useGitignore\": true,\n    \"useDefaultPatterns\": true,\n    \"customPatterns\": []\n  }\n}"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Running Repomix in Docker Container",
    "codeDescription": "Command to run Repomix in a Docker container, mounting the current directory to /app. This allows for using Repomix in an isolated environment.",
    "codeLanguage": "bash",
    "codeTokens": 63,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/CONTRIBUTING.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix Contribution Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "docker run -v ./:/app -it --rm repomix"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Copying Repomix Output to Clipboard",
    "codeDescription": "Command to automatically copy the generated output to the system clipboard, facilitating easy sharing or pasting.",
    "codeLanguage": "bash",
    "codeTokens": 43,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_11",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --copy"
      }
    ],
    "relevance": 0.885
  },
  {
    "codeTitle": "Repomix Default Ignore Patterns",
    "codeDescription": "Common ignore patterns that are included by default in Repomix configuration.",
    "codeLanguage": "text",
    "codeTokens": 40,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/configuration.md#2025-04-21_snippet_4",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "text",
        "code": "node_modules/**\n.git/**\ncoverage/**\ndist/**"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Generating Markdown Output with Repomix",
    "codeDescription": "Command to generate Markdown-formatted output using Repomix. Markdown format offers readable formatting and includes file summaries, directory structures, and file contents.",
    "codeLanguage": "bash",
    "codeTokens": 53,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/fr/guide/output.md#2025-04-21_snippet_1",
    "pageTitle": "Output Formats for Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style markdown"
      },
      {
        "language": "markdown",
        "code": "Ce fichier est une représentation fusionnée de toute la base de code...\n# Résumé du fichier\n(Métadonnées et instructions pour l'IA)\n# Structure des répertoires\n```\nsrc/\nindex.ts\nutils/\nhelper.ts\n```\n# Fichiers\n## Fichier: src/index.ts\n```typescript\n// Contenu du fichier ici\n```"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Building Repomix Docker Image",
    "codeDescription": "Command to build a Docker image for Repomix. This provides a containerized environment for development and testing.",
    "codeLanguage": "bash",
    "codeTokens": 47,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/CONTRIBUTING.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix Contribution Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "docker build -t repomix ."
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Using Code Compression in Repomix",
    "codeDescription": "Example showing how to use the --compress option in Repomix, which performs intelligent code extraction to reduce token count while preserving important structural information.",
    "codeLanguage": "bash",
    "codeTokens": 56,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_24",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --compress"
      }
    ],
    "relevance": 0.88
  },
  {
    "codeTitle": "Running Repomix with Markdown Output Style",
    "codeDescription": "Command line example showing how to generate output in Markdown format using the --style option.",
    "codeLanguage": "bash",
    "codeTokens": 45,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_18",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style markdown"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Setting XML Output Format in Repomix",
    "codeDescription": "Command to generate output in XML format, which is optimized for AI processing.",
    "codeLanguage": "bash",
    "codeTokens": 37,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/output.md#2025-04-21_snippet_0",
    "pageTitle": "Output Format Configuration Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style xml"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Using Code Compression with Remote Repositories in Bash",
    "codeDescription": "Command to enable code compression when analyzing remote repositories.",
    "codeLanguage": "bash",
    "codeTokens": 38,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/code-compress.md#2025-04-21_snippet_1",
    "pageTitle": "Code Compression for Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --remote user/repo --compress"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Generating XML Output with Repomix",
    "codeDescription": "Command to generate XML-formatted output using Repomix. XML format is optimized for AI processing and includes file summaries, directory structures, and file contents.",
    "codeLanguage": "bash",
    "codeTokens": 55,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/fr/guide/output.md#2025-04-21_snippet_0",
    "pageTitle": "Output Formats for Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style xml"
      },
      {
        "language": "xml",
        "code": "Ce fichier est une représentation fusionnée de toute la base de code...\n<file_summary>\n(Métadonnées et instructions pour l'IA)\n</file_summary>\n<directory_structure>\nsrc/\n  index.ts\n  utils/\n    helper.ts\n</directory_structure>\n<files>\n<file path=\"src/index.ts\">\n// Contenu du fichier ici\n</file>\n</files>"
      }
    ],
    "relevance": 0.875
  },
  {
    "codeTitle": "Repomix Configuration File",
    "codeDescription": "JSON configuration file for setting default output format and file path.",
    "codeLanguage": "json",
    "codeTokens": 52,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/output.md#2025-04-21_snippet_4",
    "pageTitle": "Output Format Configuration Documentation",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"style\": \"xml\",\n    \"filePath\": \"output.xml\"\n  }\n}"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Using Code Compression with Command Line in Bash",
    "codeDescription": "Basic usage of the code compression feature using the --compress flag in the command line.",
    "codeLanguage": "bash",
    "codeTokens": 40,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/code-compress.md#2025-04-21_snippet_0",
    "pageTitle": "Code Compression for Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --compress"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Running Tests and Linting for Repomix",
    "codeDescription": "Commands for running tests, generating test coverage reports, and performing various linting operations on the Repomix codebase. These help maintain code quality and identify potential issues.",
    "codeLanguage": "bash",
    "codeTokens": 92,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/development/setup.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix Development Setup Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# Run tests\nnpm run test\n\n# Test coverage\nnpm run test-coverage\n\n# Linting\nnpm run lint-biome\nnpm run lint-ts\nnpm run lint-secretlint"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Installing Repomix MCP Server in VS Code Insiders via Command Line",
    "codeDescription": "Command to add Repomix as an MCP server in VS Code Insiders. This is similar to the standard VS Code configuration but targets the Insiders build.",
    "codeLanguage": "bash",
    "codeTokens": 87,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_29",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "code-insiders --add-mcp '{\"name\":\"repomix\",\"command\":\"npx\",\"args\":[\"-y\",\"repomix\",\"--mcp\"]}'"
      }
    ],
    "relevance": 0.87
  },
  {
    "codeTitle": "Customizing Repomix Output Format",
    "codeDescription": "JSON configuration to set the default output format for Repomix. This example sets XML as the default format and specifies the output file path.",
    "codeLanguage": "json",
    "codeTokens": 70,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/fr/guide/output.md#2025-04-21_snippet_2",
    "pageTitle": "Output Formats for Repomix",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"output\": {\n    \"style\": \"xml\",\n    \"filePath\": \"output.xml\"\n  }\n}"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Packing Local Codebase with Repomix",
    "codeDescription": "Example JSON parameters for the pack_codebase tool, which packages a local code directory into a consolidated file for AI analysis. Parameters include the directory path, compression option, and file inclusion/exclusion patterns.",
    "codeLanguage": "json",
    "codeTokens": 101,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/llms-install.md#2025-04-21_snippet_1",
    "pageTitle": "Repomix MCP Server Installation Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"directory\": \"/path/to/your/project\",\n  \"compress\": true,\n  \"includePatterns\": \"src/**/*.ts,**/*.md\",\n  \"ignorePatterns\": \"**/*.log,tmp/\"\n}"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Generating Test Coverage",
    "codeDescription": "Command to run tests with coverage reporting. This helps identify areas of code that may need additional testing.",
    "codeLanguage": "bash",
    "codeTokens": 42,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/CONTRIBUTING.md#2025-04-21_snippet_6",
    "pageTitle": "Repomix Contribution Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "npm run test-coverage"
      }
    ],
    "relevance": 0.865
  },
  {
    "codeTitle": "Setting Markdown Output Format in Repomix",
    "codeDescription": "Command to generate output in Markdown format, useful for documentation purposes or when working with platforms that support Markdown.",
    "codeLanguage": "bash",
    "codeTokens": 46,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_7",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style markdown"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Setting Plain Text Output Format in Repomix",
    "codeDescription": "Command to generate output in plain text format, providing a simple representation without formatting.",
    "codeLanguage": "bash",
    "codeTokens": 41,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/usage.md#2025-04-21_snippet_8",
    "pageTitle": "Repomix CLI Tool Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style plain"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Installing Repomix with Homebrew",
    "codeDescription": "Installing Repomix on macOS or Linux systems using the Homebrew package manager.",
    "codeLanguage": "bash",
    "codeTokens": 38,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/installation.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix Installation Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "brew install repomix"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Packing Remote GitHub Repository with Repomix",
    "codeDescription": "Example JSON parameters for the pack_remote_repository tool, which fetches, clones, and packages a GitHub repository for AI analysis. Parameters include the repository URL, compression option, and file inclusion/exclusion patterns.",
    "codeLanguage": "json",
    "codeTokens": 106,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/llms-install.md#2025-04-21_snippet_2",
    "pageTitle": "Repomix MCP Server Installation Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"remote\": \"yamadashy/repomix\",\n  \"compress\": true,\n  \"includePatterns\": \"src/**/*.ts,**/*.md\",\n  \"ignorePatterns\": \"**/*.log,tmp/\"\n}"
      }
    ],
    "relevance": 0.86
  },
  {
    "codeTitle": "Installing Repomix as a Dependency with npm",
    "codeDescription": "Command to install Repomix as a dependency in a Node.js project using npm.",
    "codeLanguage": "bash",
    "codeTokens": 43,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/development/using-repomix-as-a-library.md#2025-04-21_snippet_0",
    "pageTitle": "Integration Guide for Repomix as a Library",
    "codeList": [
      {
        "language": "bash",
        "code": "npm install repomix"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Generating Plain Text Output with Repomix",
    "codeDescription": "Command to generate plain text output using Repomix. Plain text format provides a simple structure with sections for file summary, directory structure, and file contents.",
    "codeLanguage": "bash",
    "codeTokens": 55,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/fr/guide/output.md#2025-04-21_snippet_3",
    "pageTitle": "Output Formats for Repomix",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style plain"
      },
      {
        "language": "text",
        "code": "Ce fichier est une représentation fusionnée de toute la base de code...\n================\nRésumé du fichier\n================\n(Métadonnées et instructions pour l'IA)\n================\nStructure des répertoires\n================\nsrc/\n  index.ts\n  utils/\n    helper.ts\n================\nFichiers\n================\n================\nFichier: src/index.ts\n================\n// Contenu du fichier ici"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Setting Markdown Output Format in Repomix",
    "codeDescription": "Command to generate output in Markdown format for readable documentation.",
    "codeLanguage": "bash",
    "codeTokens": 33,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/output.md#2025-04-21_snippet_2",
    "pageTitle": "Output Format Configuration Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style markdown"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Reading Repomix Output in Web Environments",
    "codeDescription": "Example JSON parameters for the read_repomix_output tool, which reads the contents of a previously generated Repomix output file using its ID. This is useful in environments where direct file access is not possible.",
    "codeLanguage": "json",
    "codeTokens": 84,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/llms-install.md#2025-04-21_snippet_3",
    "pageTitle": "Repomix MCP Server Installation Guide",
    "codeList": [
      {
        "language": "json",
        "code": "{\n  \"outputId\": \"8f7d3b1e2a9c6054\"\n}"
      }
    ],
    "relevance": 0.855
  },
  {
    "codeTitle": "Initializing Repomix Configuration File with CLI",
    "codeDescription": "Command to create a new Repomix configuration file in the current directory.",
    "codeLanguage": "bash",
    "codeTokens": 37,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/pt-br/guide/configuration.md#2025-04-21_snippet_0",
    "pageTitle": "Repomix Configuration Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --init"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Setting Plain Text Output Format in Repomix",
    "codeDescription": "Command to generate output in plain text format for universal compatibility.",
    "codeLanguage": "bash",
    "codeTokens": 34,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/output.md#2025-04-21_snippet_5",
    "pageTitle": "Output Format Configuration Documentation",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style plain"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Repomix Output Format Commands",
    "codeDescription": "Commands for specifying different output formats including XML, Markdown, and plain text.",
    "codeLanguage": "bash",
    "codeTokens": 69,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/index.md#2025-04-21_snippet_5",
    "pageTitle": "Repomix Documentation and Usage Guide",
    "codeList": [
      {
        "language": "bash",
        "code": "# XML format (default)\nrepomix --style xml\n\n# Markdown format\nrepomix --style markdown\n\n# Plain text format\nrepomix --style plain"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Using File System MCP Tools in TypeScript",
    "codeDescription": "TypeScript code example demonstrating how to use the file_system_read_file and file_system_read_directory tools to safely interact with the local file system.",
    "codeLanguage": "typescript",
    "codeTokens": 100,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/mcp-server.md#2025-04-21_snippet_6",
    "pageTitle": "Repomix MCP Server Documentation",
    "codeList": [
      {
        "language": "typescript",
        "code": "// Reading a file\nconst fileContent = await tools.file_system_read_file({\n  path: '/absolute/path/to/file.txt'\n});\n\n// Listing directory contents\nconst dirContent = await tools.file_system_read_directory({\n  path: '/absolute/path/to/directory'\n});"
      }
    ],
    "relevance": 0.85
  },
  {
    "codeTitle": "Creating Global Repomix Configuration",
    "codeDescription": "Command to create a global configuration file that applies to all projects unless overridden by a local configuration.",
    "codeLanguage": "bash",
    "codeTokens": 48,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_33",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --init --global"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Running Repomix with Plain Text Output Style",
    "codeDescription": "Command line example showing how to generate output in plain text format using the --style option.",
    "codeLanguage": "bash",
    "codeTokens": 46,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/README.md#2025-04-21_snippet_20",
    "pageTitle": "Repomix: AI-Friendly Repository Packer",
    "codeList": [
      {
        "language": "bash",
        "code": "repomix --style plain"
      }
    ],
    "relevance": 0.845
  },
  {
    "codeTitle": "Architecture Review Prompt for Code Analysis",
    "codeDescription": "A prompt template for requesting an architectural analysis of a codebase, focusing on structure, potential issues, scalability improvements, and best practices identification.",
    "codeLanguage": "markdown",
    "codeTokens": 94,
    "codeId": "https://github.com/yamadashy/repomix/blob/main/website/client/src/en/guide/prompt-examples.md#2025-04-21_snippet_0",
    "pageTitle": "Prompt Examples for Code Analysis",
    "codeList": [
      {
        "language": "markdown",
        "code": "Analyze this codebase's architecture:\n1. Evaluate the overall structure and patterns\n2. Identify potential architectural issues\n3. Suggest improvements for scalability\n4. Note areas that follow best practices\n\nFocus on maintainability and modularity."
      }
    ],
    "relevance": 0.845
  }
]